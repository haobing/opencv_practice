#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp> 
#include <iostream> 
#include <opencv2/opencv.hpp>
//放射变换
using namespace cv;
using namespace std;

int main()
{
	Mat rot_mat(2,3,CV_32FC1);
	Mat warp_mat(2,3,CV_32FC1);
	Mat src,warp_dst,warp_rotate_dst;
	
	src = imread("cat.jpg",1);
	warp_dst =Mat::zeros(src.rows,src.cols,src.type());
	
	Point2f srcTri[3];
	Point2f dstTri[3];
	
	srcTri[0] = Point2f(0,0);
	srcTri[1] = Point2f(src.cols-1,0);
	srcTri[2] = Point2f(0,src.rows-1);
	
	dstTri[0] = Point2f(0,0);
	dstTri[1] = Point2f(src.cols*0.5,src.rows*0.5);
	dstTri[2] = Point2f(0,src.rows-1);
	
	warp_mat = getAffineTransform(srcTri,dstTri);
	warpAffine(src,warp_dst,warp_mat,warp_dst.size());
	
	Point center = Point(warp_dst.cols/2,warp_dst.rows/2);
	double angle = 90.0;
	double scale = 1.0;
	rot_mat = getRotationMatrix2D(center,angle,scale);
	warpAffine(warp_dst,warp_rotate_dst,rot_mat,warp_dst.size());
	imshow("原图",src);
	imshow("仿射图",warp_dst);
	imshow("旋转图",warp_rotate_dst);
	
	addWeighted(src,0.7,warp_dst,0.3,0,src);
	imshow("add",src);

		waitKey(0);
		 return 0;
}
